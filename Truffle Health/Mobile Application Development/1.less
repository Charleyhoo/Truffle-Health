import 'package:flutter/material.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Medical Bill Input',
      home: HomePage(),
    );
  }
}

class HomePage extends StatefulWidget {
  @override
  _HomePageState createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  List<MedicalBill> bills = [];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Medical Bills'),
      ),
      body: ListView.builder(
        itemCount: bills.length,
        itemBuilder: (context, index) {
          return ListTile(
            title: Text(bills[index].patientName),
            subtitle: Text(bills[index].hospitalName),
            trailing: Text(bills[index].billAmount.toString()),
            onTap: () {
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => SummaryPage(bills[index]),
                ),
              );
            },
          );
        },
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          Navigator.push(
            context,
            MaterialPageRoute(
              builder: (context) => FormPage(),
            ),
          );
        },
        child: Icon(Icons.add),
      ),
    );
  }
}

class FormPage extends StatefulWidget {
  @override
  _FormPageState createState() => _FormPageState();
}

class _FormPageState extends State<FormPage> {
  final _formKey = GlobalKey<FormState>();

  String _patientName;
  String _patientAddress;
  String _hospitalName;
  DateTime _dateOfService;
  double _billAmount;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Enter Medical Bill'),
      ),
      body: Form(
        key: _formKey,
        child: Column(
          children: <Widget>[
            TextFormField(
              decoration: InputDecoration(labelText: 'Patient Name'),
              validator: (value) {
                if (value.isEmpty) {
                  return 'Please enter a patient name';
                }
                return null;
              },
              onSaved: (value) => _patientName = value,
            ),
            TextFormField(
              decoration: InputDecoration(labelText: 'Patient Address'),
              validator: (value) {
                if (value.isEmpty) {
                  return 'Please enter a patient address';
                }
                return null;
              },
              onSaved: (value) => _patientAddress = value,
            ),
            TextFormField(
              decoration: InputDecoration(labelText: 'Hospital Name'),
              validator
